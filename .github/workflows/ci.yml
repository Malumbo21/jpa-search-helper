name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Run tests
      run: ./gradlew test
          
  publish:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Import GPG key
      run: |
        echo "${{ secrets.GPG_SIGNING_KEY }}" > private.key
        gpg --batch --import private.key
        rm private.key
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

    - name: Set GPG configuration
      run: |
        echo "use-agent" >> ~/.gnupg/gpg.conf
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Publish to Maven Central
      run: ./gradlew publish
      env:
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USER }}
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_TOKEN }}
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
