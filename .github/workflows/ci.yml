name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4 

    - name: Check for vulnerabilities with OWASP Dependency Check
      uses: dependency-check/scan-action@v4
      with:
        project: ${{ github.repository }}
        scan-path: .

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.9
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          
  publish:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Build with Gradle
      run: ./gradlew build

    - name: Publish to Maven Central
      run: ./gradlew publish
      env:
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USER }}
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_TOKEN }}  
